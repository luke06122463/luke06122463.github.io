<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[BlackSheep]]></title>
  <subtitle><![CDATA[Let every blog records your growth]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com//"/>
  <updated>2015-08-15T16:02:27.000Z</updated>
  <id>http://yoursite.com//</id>
  
  <author>
    <name><![CDATA[Luke06122463]]></name>
    <email><![CDATA[lukaihaoshuai@outlook.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[BSM Update - create new bookmark]]></title>
    <link href="http://yoursite.com/2015/08/15/bookmark-creation-for-bsm/"/>
    <id>http://yoursite.com/2015/08/15/bookmark-creation-for-bsm/</id>
    <published>2015-08-15T15:53:05.000Z</published>
    <updated>2015-08-15T16:02:27.000Z</updated>
    <content type="html"><![CDATA[<p>BSM provides two approach for user to store their bookmarks:</p>
<ol>
<li>Fullfill the form for the creation of bookmark manually</li>
<li>Export the bookmarks from Chrome and Import the file into BSM</li>
</ol>
<p>Currently, I only have had the time for implementing the first way.</p>
<p>Here is simple demostration for its workflow.</p>
<p>Firstly, user needs to click the <code>New</code> button on the header next to the search bar.<br><img src="/img/bsm/new_001.png" alt="Alt text"></p>
<p>Then a form will be prompted.<br><img src="/img/bsm/new_002.png" alt="Alt text"></p>
<p>User needs to complete the form manually.<br><img src="/img/bsm/new_003.png" alt="Alt text"></p>
<p>After user finish the form and click the <code>Create</code> button, then he will see the new bookmark on the page.<br><img src="/img/bsm/new_004.png" alt="Alt text"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>BSM provides two approach for user to store their bookmarks:</p>
<ol>
<li>Fullfill the form for the creation of bookmark manually</li>
<l]]>
    </summary>
    
      <category term="Bookmark Search" scheme="http://yoursite.com/categories/Bookmark-Search/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BSM Update - login module]]></title>
    <link href="http://yoursite.com/2015/08/15/login-module-for-bsm/"/>
    <id>http://yoursite.com/2015/08/15/login-module-for-bsm/</id>
    <published>2015-08-15T15:01:50.000Z</published>
    <updated>2015-08-15T16:03:52.000Z</updated>
    <content type="html"><![CDATA[<p>Since BSM will manage the bookmarks collection based on user which means different users could only see their own bookmarks, I need to design and implement the login mechanism for BSM.</p>
<a id="more"></a>
<h2 id="Login_mechanism">Login mechanism</h2><p>From my point of view, a completed login mechanism should contains four parts:</p>
<ol>
<li><p>Authentication.</p>
<blockquote>
<p>Anyone who try to access BSM website needs be validated to identify whether they are qualified users. Only those who have registered themself as BSM’s member can access BSM.</p>
</blockquote>
</li>
<li><p>Authorization.</p>
<blockquote>
<p>Web resource is only available to the user who has the corresponding permission. If anyone try to access some resource that isn’t available for him, BSM will deny his request even he is a qualified user.</p>
</blockquote>
</li>
<li><p>User information and User preference</p>
<blockquote>
<p>When user pass the authentication check and authorization check, BSM will show user’s profile and apply his preference for himself.</p>
</blockquote>
</li>
<li><p>Route Control</p>
</li>
</ol>
<p>Before we keep going on, let’s catch a glimpse of what the login page looks like:<br><img src="/img/bsm/login_001.png" alt="Alt text" title="pic_01"></p>
<p>When user passes the validation, then he will see the following page:<br><img src="/img/bsm/login_002.png" alt="Alt text" title="pic_02"></p>
<p>Now, let me introduce how I implement the login mechanism in BSM project.</p>
<h3 id="Authentication">Authentication</h3>]]></content>
    <summary type="html">
    <![CDATA[<p>Since BSM will manage the bookmarks collection based on user which means different users could only see their own bookmarks, I need to design and implement the login mechanism for BSM.</p>]]>
    
    </summary>
    
      <category term="Bookmark Search" scheme="http://yoursite.com/categories/Bookmark-Search/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BSM introduction]]></title>
    <link href="http://yoursite.com/2015/08/13/bsm-introduction/"/>
    <id>http://yoursite.com/2015/08/13/bsm-introduction/</id>
    <published>2015-08-13T15:33:52.000Z</published>
    <updated>2015-08-15T16:02:59.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Introduction">Introduction</h2><p>One side, I love chrome’s bookmark because it’s so convenient to manage all the web resource I cherished. But on the other side, I can’t help complaining its simplicity. Here is what bother me most:</p>
<ul>
<li><p>With several year’s accumulation, it becomes extremely hard to find what I want from such a messy url collection. How many times I have to go through each of bookmark folders to find the target. What was worse, it’s  very likely you have no idea to your bookmark until you open the url and see the resource.</p>
</li>
<li><p>Considering the network condition of China, it’s a great pain to re-open the bookmark since some request is hard to retrieve back, especially those resource whose server is outside of mainland.  Re-opening bookmark is time-consuming.</p>
</li>
<li><p>You have no idea when your bookmark is no longer available. Maybe author deletes their article or maybe the website is blocked according to some policy.</p>
</li>
<li><p>Since chrome has been driven out of China, we can’t sync its bookmarks between different platform. I always worry about one day I may loss all of my bookmarks since it’s not portable.</p>
</li>
</ul>
<p>All in all, chrome’s bookmarks can’t fully support my requirement. So I decide to maintain and extend the bookmarks all by myself.</p>
<p>In order to maintain bookmark and achieve the functionality that I ask for, I plan to design and implement ‘Bookmark Search Manager’ project. Let’s call it ‘BSM’ for short. </p>
<p>Here is brief list of its features. </p>
<ul>
<li><p>Manage bookmarks by user</p>
<blockquote>
<p>BSM is basing on membership. User need to register as its member at first and all the  functionality are not available until he has logged in.</p>
</blockquote>
</li>
<li><p>Branch-based management</p>
<blockquote>
<p>User can create/update bookmark repository by uploading chrome’s bookmark to BSM. Each update will only merge the diff to the branch and all the commit will be recorded so that it’s possible for user to switch to any version he wants. Actually, we call it go forward and back mechanism just as browser’s go back/forward button.</p>
</blockquote>
</li>
<li><p>Offline bookmarks</p>
<blockquote>
<p>BSM will do crawling for each of the bookmark automatically so that user can access the resource behind the bookmark offline without being scared of resource unavailable.</p>
</blockquote>
</li>
<li><p>Show summary for bookmark</p>
<blockquote>
<p>User can add summary for each of bookmark and BSM will show title and summary of bookmark to user. This will help user have a better understanding of the resource and focus on what they are truly interested in.</p>
</blockquote>
</li>
<li><p>Filter bookmarks by its organization</p>
<blockquote>
<p>Currently, chrome’s bookmark is organized by folder.  So it’s reasonable to provide a folder-based filter mechanism that user can choose a folder to see the bookmark under that folder. Maybe we can provide multiple selection.</p>
</blockquote>
</li>
<li><p><strong>Provide search functionality for bookmark</strong></p>
<blockquote>
<p>Ideally, I want to provide search functionality for the whole website. User can search the specific bookmark according to the keywords he inputs.</p>
</blockquote>
</li>
<li><p>Support for multiple bookmarks</p>
</li>
</ul>
<h2 id="Where_the_idea_come_from?">Where the idea come from?</h2><p>cTo be frank, a well constructed bookmark manager is really something that I desired but it doesn’t worth my so much leisure time to solve such kind of a simple bothering.</p>
<p>Two years has past since I graduated from college. In my past two years, I learned a lot of new technologies, including: ruby on rails, restful api, elasticsearch, angularjs, dojo, easyui.</p>
<p>I’m always wondering do I really make any progress? do I fully understand those technologies? their usage? the mechanism behind them? are they still separated technologies for me or I can consider them as an integrated solution? With those confusion, I decide to take some action and do something with those new skill.</p>
<h2 id="Architecture">Architecture</h2><p>Here is the architecture for Bookmark Search Manager</p>
<ul>
<li><p>Front-end: AngularJS + Bootstrap</p>
<blockquote>
<p>BSM is a single page application. </p>
</blockquote>
</li>
<li><p>Web Server: ruby on rails</p>
<blockquote>
<p>Currently, I adopt webrick as BSM’s web server</p>
</blockquote>
</li>
<li><p>Web API: Grape</p>
</li>
<li><p>Database: ElasticSearch</p>
<blockquote>
<p>I use ElasticSearch to replace DB.</p>
</blockquote>
</li>
<li><p>Index Engine: Tika + ElastiSearch</p>
<blockquote>
<p>when and how to index resource is not decided yet</p>
</blockquote>
</li>
</ul>
<p>If everything goes well, I’d like to rebuild BSM with the technologies that I’m fond of.</p>
<ul>
<li><p>Front-end: AngularJS + Bootstrap</p>
<blockquote>
<p>BSM is a single page application. </p>
</blockquote>
</li>
<li><p>Web Server: Nodejs + Express</p>
</li>
<li><p>Database: MongoDB</p>
</li>
<li><p>Index Engine: Tika + ElastiSearch</p>
<blockquote>
<p>when and how to index resource is not decided yet</p>
</blockquote>
</li>
</ul>
<h2 id="Detail_Design">Detail Design</h2><h3 id="Detail_Design_for_Front_End">Detail Design for Front End</h3><p>GUI should contains the following page:</p>
<ul>
<li><p>Login</p>
<blockquote>
<p>User can log in</p>
</blockquote>
</li>
<li><p>Dashboard</p>
<blockquote>
<p>User can see all the bookmarks on this page</p>
<p>User can filter the bookmarks</p>
<p>User can add summary for bookmark</p>
<p>User can preview bookmark</p>
</blockquote>
</li>
<li><p>Search</p>
<blockquote>
<p>User can search specific markbooks by keywords</p>
</blockquote>
</li>
<li><p>Config</p>
<blockquote>
<p>User can create new repository</p>
<p>User can update the repository</p>
<p>User can view the commit history</p>
<p>User can switch branch</p>
</blockquote>
</li>
</ul>
<p>CUI should contains the following modules (I have implemented them in my daily work):</p>
<ul>
<li><p>Authorization (access controll)</p>
</li>
<li><p>Browser Check</p>
</li>
<li><p>Localization (i18n/L10)</p>
</li>
<li><p>Route control</p>
</li>
<li><p>Error Handling</p>
</li>
</ul>
<h3 id="Detail_Design_for_Web_Service">Detail Design for Web Service</h3><p>Web Service should contains four controllers:</p>
<ul>
<li><p>Application_Controller</p>
<blockquote>
<p>Check for authentication and session timeout</p>
</blockquote>
</li>
<li><p>Auth_Controller</p>
<blockquote>
<p>Responsible for authentication</p>
</blockquote>
</li>
<li><p>Bookmark_Controller</p>
<blockquote>
<p>Serve for dashboard page</p>
</blockquote>
</li>
<li><p>Config_Controller</p>
<blockquote>
<p>Serve for config page</p>
</blockquote>
</li>
<li><p>Search_Controller</p>
<blockquote>
<p>Serve for search page</p>
</blockquote>
</li>
</ul>
<h3 id="Detail_Design_for_Web_API">Detail Design for Web API</h3>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Introduction">Introduction</h2><p>One side, I love chrome’s bookmark because it’s so convenient to manage all the web resource I che]]>
    </summary>
    
      <category term="Bookmark Search" scheme="http://yoursite.com/categories/Bookmark-Search/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hex to unicode]]></title>
    <link href="http://yoursite.com/2015/08/08/hex-to-unicode/"/>
    <id>http://yoursite.com/2015/08/08/hex-to-unicode/</id>
    <published>2015-08-07T16:27:05.000Z</published>
    <updated>2015-08-07T16:49:10.000Z</updated>
    <content type="html"><![CDATA[<p>Sometimes, we need to read data from old-fashioned devise. Unfortunately, many old-fashioned devise doesn’t support unicode very well. So we need to translate data from any format to unicode.</p>
<a id="more"></a>
<p>Now things become clear that the string returned by ldap API is hex rather than Unicode. We need to format these string to utf-8 before taking any advantage of them.</p>
<p>There are mainly two ways to use ldap result:</p>
<ol>
<li>show the ldap result on web client</li>
<li>store the ldap result to elasticsearch</li>
</ol>
<p>I write a common function to finish the formatting work and here is its definition:<br><img src="/img/unicode_001.jpg" alt="Alt text"></p>
<p>You can use the function to format every ldap result with the usage of <em>Format::String.format_json_to_unicode(source)</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Sometimes, we need to read data from old-fashioned devise. Unfortunately, many old-fashioned devise doesn’t support unicode very well. So we need to translate data from any format to unicode.</p>]]>
    
    </summary>
    
      <category term="RubyOnRails" scheme="http://yoursite.com/categories/RubyOnRails/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nginx sub-domain]]></title>
    <link href="http://yoursite.com/2015/08/08/nginx-sub-domain/"/>
    <id>http://yoursite.com/2015/08/08/nginx-sub-domain/</id>
    <published>2015-08-07T16:25:32.000Z</published>
    <updated>2015-08-07T16:48:48.000Z</updated>
    <content type="html"><![CDATA[<p>In order to make the search web and admin search share the same root url (<a href="https://localhost" target="_blank" rel="external">https://localhost</a>) and distinguish each by sub domain(/admin and /search respectively), we need to modify most URL in our project since currently we use absolute path to visit resource.</p>
<p>When we configure nginx to support it, we need to change the way of how we request resource. </p>
<p>For example, currently we access an image with the url of “<a href="https://localhost:3000/assets/image01.jpg”" target="_blank" rel="external">https://localhost:3000/assets/image01.jpg”</a>. But after we turn on nginx’s sub domain functionality, we need to change the way to “<a href="https://localhost/admin/assets/image01.jpg”" target="_blank" rel="external">https://localhost/admin/assets/image01.jpg”</a>  </p>
<p>Actually, we need to change all the url on our web pages. </p>
<h2 id="Here_is_the_resource_category:">Here is the resource category:</h2><ol>
<li>Assets<br>1-a. Style sheets<br>1-b. Javascript files<br>1-c. Image on the html<br>1-d. Image in css<br>1-e. Image inserted into html by js</li>
</ol>
<ol>
<li>Request url<br> 2-a. url on html (hyper link &amp; form)<br> 2-b. url in js (such as ajax url)</li>
</ol>
<p>With some investigation, we found we can take advantage of Rails tag to solve the problem.</p>
<p>When we set  <em>config.relative_url_root = “/admin”</em>  in application.rb, then Rails will prepend  <em>“/admin”</em>  when generating links. So we need to use rails tag in our project as more as possible.</p>
<h3 id="As_to_1-a_(style_sheets)_and_1-b_(javascript_files)">As to 1-a (style sheets) and 1-b (javascript files)</h3><p>I use rails tag ‘javascript_include_tag’ and ‘stylesheet_link_tag’ to request css &amp; js resource.</p>
<p>Before:<br><img src="/img/nginx_001.jpg" alt="Alt text"></p>
<p>After:<br><img src="/img/nginx_002.jpg" alt="Alt text"></p>
<p>Now 1-a (style sheets) and 1-b (javascript files) can be requested in sub-domain mode.</p>
<h3 id="As_to_1-c_(Image_on_the_html)_and_2-a_(url_on_html)">As to 1-c (Image on the html) and 2-a (url on html)</h3><p>There are two ways to introduce them into html.</p>
<p>One way is  creating them with rails tag, such as image_path. Since the url is created by rails tag, then it should work well in sub-domain mode. Just leave it alone.</p>
<p>The other way is the url is specified by developer. The url can be relative-path and it also can be absolute-path.</p>
<ol>
<li>If it is relative-path, then it would work well in sub-domain mode.</li>
<li>If it is absolute-path, then we need to prepend the sub-domain for the url. Fortunately, we can get the sub-domian  from  <em>config.relative_url_root</em> and what we need to do is only adding the <em>relative_url_root</em> before the url.</li>
</ol>
<p>I store <em>relative_url_root</em> into the variable <em>@root_url</em>.<br><img src="/img/nginx_003.jpg" alt="Alt text"></p>
<p>So if you request an image in html with the following way:<br><img src="/img/nginx_004.jpg" alt="Alt text"><br>Now you need to change it to:<br><img src="/img/nginx_005.jpg" alt="Alt text"></p>
<h3 id="As_to_1-d_(Image_in_css)">As to 1-d (Image in css)</h3><p>We can use relative-path to access image</p>
<p>Before:<br><img src="/img/nginx_006.jpg" alt="Alt text"></p>
<p>After:<br><img src="/img/nginx_007.jpg" alt="Alt text"></p>
<h3 id="As_to_1-e(Image_inserted_into_html_by_js)_and_2-b_(url_in_js)">As to 1-e(Image inserted into html by js) and 2-b (url in js)</h3><p>The url must be specified by developer. So,</p>
<ol>
<li>If it is relative-path, then it would work well in sub-domain mode.</li>
<li>If it is absolute-path, then we need to prepend the sub-domain for the url.</li>
</ol>
<p>There is a global js variable <em>global_root_url</em> which represent the <em>relative_url_root</em></p>
<p>So if you specify url in js with the following way:<br><img src="/img/nginx_008.jpg" alt="Alt text"></p>
<p>Then you need to change it to:<br><img src="/img/nginx_009.jpg" alt="Alt text"></p>
<p>Besides, when we use redirect_to to redirect user to some page, then we also need to specify the sub domain for url.<br>Before:<br><img src="/img/nginx_010.jpg" alt="Alt text"><br>After:<br><img src="/img/nginx_011.jpg" alt="Alt text"></p>
<p>Actually, if we don’t set <em>config.relative_url_root</em>, then both <em>@root_url</em>  and <em>global_root_url</em> are empty string.</p>
<p>I have tested it in my environment and it works well both in development and production mode.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>In order to make the search web and admin search share the same root url (<a href="https://localhost" target="_blank" rel="external">http]]>
    </summary>
    
      <category term="RubyOnRails" scheme="http://yoursite.com/categories/RubyOnRails/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python的类机制]]></title>
    <link href="http://yoursite.com/2015/08/06/Python%E7%9A%84%E7%B1%BB%E6%9C%BA%E5%88%B6/"/>
    <id>http://yoursite.com/2015/08/06/Python的类机制/</id>
    <published>2015-08-06T14:20:09.000Z</published>
    <updated>2015-08-13T15:31:09.000Z</updated>
    <content type="html"><![CDATA[<h2 id="初识Python类机制">初识Python类机制</h2><p>首先参照图(pic_01):<br><img src="/img/python/class_object_001.png" alt="Alt text" title="pic_01"></p>
<p>我们可知Python在类机制的实现中引入了两个很纠结的概念：PyTypeObject和基类，从而引出了Class与Instance以及基类和子类的概念。</p>
<p>原以为这两个概念并不存在太大的区别，可在逐步了解Python的对象机制的过程中，我发现两者相辅相成，相互交织却在功能划分上又泾渭分明。</p>
<p>对于一套完整的类实现机制，其流程为:</p>
<ol>
<li>创建Class对象（<code>PyTypeObject</code>）</li>
<li>实例化对象来得到Instance（<code>PyObject</code>）</li>
<li>使用Instance</li>
</ol>
<p>其中，Class对象对应了上图（pic_01）中的中间部分，Instance对象对应最右边，而在最左边还有一个 <code>&lt;type, &#39;type&#39;&gt;</code> 对象，该对象在创建Class对象的过程中起了至关重要的作用。所以图(pic_01)更多地向我们展示了类机制的<code>is-instance-of</code>关系，即instance是怎么一步步创建出来的。我觉得这很重要，它帮助我们理清了Python类机制的层次关系，解答了Python中的先有鸡还是先有蛋的问题。通过这样的叙述关系，我们知道了Instance对象是怎么来的，同样地，我们也弄清楚了负责创建Instance的Class对象又是怎么被创建。这对于我们了解Python的类机制怎么从无到有以及将Class与Instance的关系抽象出来并与其他语言的类概念联系起来，都非常有帮助。</p>
<p>但上面的描述不够具体，忽略了很多的实现细节。要想从根本上理解Python的对象机制，我们不仅要从设计上理解各个概念之间的关系，并且我们还需要从实现上窥视所谓的类和对象的本质。换种说法就是怎样用其他语言来实现Python的类机制。</p>
<h2 id="探究类机制的本质">探究类机制的本质</h2><p>简单的说，Instance对象就是一堆数据以及围绕这些数据进行操作的一组方法的集合。在类机制里面，我们称数据之为成员变量，称围绕这些数据进行操作的方法为成员方法。</p>
<h3 id="C++中的实现">C++中的实现</h3><p>在C++中，Instance对象无非就是一段固定的内存和一堆指令码的集合。内存用于存放数据，指令码用于操作内存中的数据以及一些逻辑操作。</p>
<p>在C++的世界里，Class仅仅是Instance的模板，它仅仅定义了Instance应该是什么样子的，有哪些成员变量，有哪些成员方法。这样纯粹的说明是不需要使用内存的（为了简化问题，这里不考虑static成员变量，话说static存放的内存空间也跟成员变量不一样=.=!!），所以在C++中，Class仅仅是一堆指令码的集合（指令码会从硬盘读取到内存，但因为概念不一样，所以区别于一般的存放程序数据的内存）。而Instance就不一样了，在Class的new函数（也是一堆指令码&gt;.&lt;）的指挥下开始申请内存然后初始化成员变量，并且通过函数指针使用Class中定义的成员方法来操作内存中的成员变量。</p>
<p>总结一下就是，在C++的实现中：</p>
<ol>
<li>Class用于描述Instance的结构和方法，其本质是一堆指令码，包括用于操作Instance的结构的new、destroy等方法，以及提供给Instance使用的方法。</li>
<li>Instance是一段固定的内存和一堆指令码的集合，是面向对象的设计思想中的核心。其内存的申请和分配均由Class的new函数来负责，而成员方法均由Class来定义。</li>
</ol>
<blockquote>
<p>脑洞大开一下，我再补充个观点，未得到验证所以不见得对，请大家绕道。</p>
<p>由于C++是对C的补充和扩展，所以它的实现也是依托于C。但是C本身是面向过程的语言，只有function和variable。套用我先前所提到的逻辑，<em>Instance是一段固定的内存和一堆指令码的集合</em>，慢着，怎么这么耳熟，这不就是variable（一段固定的内存）+ function（一堆指令码）的组合嘛！但是variable不能提前定义啊，否则它的内存地址就确定下来了，并且不同的Instance应该拥有属于自己的variable集合，这样的动态分配是Instance本身所不具备的功能，需要在更高层完成；同样地，我们不能重复定义function，所有的Instance应该share相同的function集合，再加上继承、共私有机制的引进，Instance本身无法实现这样的需求，同样需要在更高层完成。所以这时候我们需要Class来完成这些工作。Class通过new函数来为新创建的Instance申请空间，并在申请到的空间中申明variable；紧接着variable，Class会在之后的内存中存放Instance需要的函数所对应的函数指针。每个函数会根据所分配的首地址以及成员变量的地址偏移来得到variable并对其操作。大概这样就能实现了吧，么么哒~</p>
</blockquote>
<h3 id="Python中的实现">Python中的实现</h3><p>Python作为更高层的抽象，其关注点已经脱离了C++的如何实现类机制，而是更多地focus在如何构建一个更加彻底更加灵活的对象世界。不过反过来说，也正是因为C++已经实现了类机制或在说C++已经屏蔽了类的实现，所以Python（C-Python）可以把更多的精力花在对象的设计上。</p>
<p>但由于Python最终还是需要通过C++来实现自己的对象机制，所以我理解中的Python对象机制应该有两层：</p>
<blockquote>
<ol>
<li><p>对象结构的定义。这里的定义主要是指C++的类定义。Python对象的本质是C++对象，所以我们事先需要为这些对象定义类。</p>
</li>
<li><p>python对象机制的实现。包括预先定义的<code>PyTypeObject</code>、基类和其他一些在虚拟机初始化之时就已经存在了的对象，以及python对象怎么创建、如何自定义python的class等等。</p>
</li>
</ol>
</blockquote>
<p>正因为Python不是凭空出世，它的实现是建立在C++上，所以我们要遵守C++的规则，先定义class再创建对象。这一部分的内容仍然属于C++数据机构的范畴，所以在概念上我们一般不把它纳入Python的对象机制的实现中，但我们需要明白的是，这才是python对象机制实现的基础，没有这些数据结构的定义，python何从谈起。当然以后如果我们在python的基础上构建其他的语言，到那个时候，python会为新语言屏蔽对象机制的实现，让后者可以聚焦更抽象更高级的层次。</p>
<p>当Python虚拟机启动的时候，Python会根据之前定义的数据结构去创建C++对象，而所创建的这些便是Python的基石–<code>PyTypeObject</code>，至此我们总算引出了Python的对象机制了。Python中的所有的这些<code>PyTypeObject</code>都是实实在在的C++对象，有分配给它的内存空间用于存放该类型的对象的metadata；有定义给他的函数方法，用于创建Python实例以及继承给Python实例使用的方法。如果用面向对象的思维去审视这些<code>PyTypeObject</code>，那么他们应该是Python世界里面的类。而Python也会用<code>PyTypeObject</code>中方法去创建Python实例，给他们分配内存空间用于存放真正的数据，同时也会把方法继承给Python实例，这样这些Python实例就具有对象的一切功能了。</p>
<p>现在应该明白了为什么说Python的世界里面都是对象：<strong>PyTypeObject和Python实例都是实实在在的C++对象</strong>。</p>
<h2 id="Python对象机制的实现">Python对象机制的实现</h2><p><strong>为了更贴近Python的语言风格，在接下来的描述中，如果涉及到概念，我将延续先前使用的Class&amp;Instance这样的术语，但在涉及到Python的具体实现中我将会</strong></p>
<ol>
<li>用<code>PyTypeObject</code>来表示Class对象</li>
<li>用<code>PyObject实例</code>来表示Instance对象</li>
<li>用<code>PyObject</code>来泛指Python的所有对象（everything in python is a object）</li>
<li>用<code>PyBaseObject_Type</code>来表示所有Python最基本的Class对象，所有的<code>PyObject</code>均继承自它。原型为<code>&lt;type, &#39;object&#39;&gt;</code></li>
</ol>
<p>由于一切的Python都是对象，所以对于对象（<code>PyTypeObject</code>）创建对象（<code>PyObject实例</code>）的理解，我更习惯于用方法继承的关系来解释两类对象之间的关系，即<code>PyObject实例</code>继承自<code>PyTypeObject</code>。</p>
<p>让我们切换回面向对象的思维方式，用类（<code>PyTypeObject</code>）和对象（<code>PyObject实例</code>）的逻辑来接着探究Python的世界。</p>
<p>Python对象会继承基类的方法，而所谓的继承，实则上更多地是属性的重用，所以图(pic_01)并未很好地展现继承的层次关系。</p>
<p>接下来，我将通过对Class对象以及instance对象创建过程的剖析来探究PyTypeObject。不可避免地，我们会涉及到类的继承，因为它们本来就都是整个Class对象的一部分。</p>
<p>图(pic_01)很好地展示了Python的类机制的层次关系，即<code>metaclass</code>负责创建其他的class对象，而这些被创建的class对象负责创建instance对象，所以也就出现了两层<code>is-instance-of</code>关系。也正是因为存在这两层的<br><code>is-instance-of</code>，class对象和instance对象才能从无到有。我在阅读《Python源码剖析》的过程中，不曾看到哪个PyTypeObject的ob_type所指向的非<code>metaclass</code>，这样的机制极大地简化了Python的类机制，易于理解也易于实现。</p>
<h3 id="PyObject实例的创建"><code>PyObject实例</code>的创建</h3><p>为了更好地展示如何通过<code>PyTypeObject</code>来创建<code>PyObject实例</code>，我在这里展示另外一张图(pic_02):<br><img src="/img/python/class_object_002.png" alt="Alt text" title="pic_02"></p>
<p>标上序号的虚线箭头代表了创建整数对象的函数调用流程，可以概括为：首先<code>PyTypeObject</code>(在这里即为<code>PyInt_type</code>)的tp_new会被调用，该函数可以视为new操作符（为instance对象申请内存空间以及初始化工作），若tp_new为NULL，<code>PyTypeObject</code>对象会去寻找基类(<code>PyBaseObject_Type</code>)的tp_new函数。因为所有的<code>PyObject</code>都继承自<code>PyBaseObject_Type</code>，而<code>PyBaseObject_Type</code>的tp_new的实现不为NULL，所以任何<code>PyObject</code>总能找到tp_new函数来完成用<code>PyObject实例</code>的创建。在具体的实现中，tp_new函数会访问<code>PyTypeObject</code>的tp_basicsize来确定要申请的空间大小；当空间申请结束之后，tp_new会调用tp_init函数来完成初始化工作。</p>
<p>Python的对象创建机制比较复杂，但工作原理却相当明朗，即Class对象调用自身的tp_new，赋以自身的一些必要属性作为参数，来为Instance对象分配内存和初始化工作。所以才有我先前的结论：Python是由Class对象（<code>PyTypeObject</code>）来负责对象的实例化，其中，我们看到某一Class对象的tp_new的具体实现可以不是由自身给出，而是顺藤摸瓜，通过一系列的函数指针的传递和函数调用来确定最终的函数实现。</p>
<p>在这里我们可以看到继承的运用。继承更多地是关注子类继承父类的属性，即我们的最终目的是子类的功能更加丰富，基类更多的是为了这个目的服务。所以在创建实例时，我们并未与某一Class对象的基类打交道，发生关系的主体还是Class对象，只不过通过继承这种方式可以共享一些公用的方法，所以<code>&lt;type, &#39;object&#39;&gt;</code>便是所有类的公有方法的集合。具体的实现方法也相当简单，只需要在Python的每个<code>PyTypeObject</code>中保有指向基类的指针，然后通过统一的接口调用基类的方法，而该方法本身又将使用调用者本身的属性，实现多态。当然现实中并不一定会实现地这么简陋，Python很干脆地打了我的脸：Python采用了另外一种方式，即使用dict对象来存储&lt;’函数名’，’函数地址’&gt;，所以他可以通过函数名字来调用相对应的函数，包括基类的方法，只要在填充dict对象时，将基类的方法填充进去，使得基类的方法变成Class对象的方法（方法实现的指令码还在基类中），这样Class对象就可以在自己的方法集合中找到基类的方法，使用自身的metadata来创建实例，而新创建的实例将会指向Class对象的方法集合。有木有觉得有了继承机制之后，Class对象可以搞定一切啊！！！</p>
<p>当Class对象为<code>PyObject实例</code>分配内存之后，Class对象会调用<code>tp_init</code>来完成实例的初始化，所以<code>tp_init</code>即为构造函数</p>
<h3 id="PyTypeObject的创建"><code>PyTypeObject</code>的创建</h3>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="初识Python类机制">初识Python类机制</h2><p>首先参照图(pic_01):<br><img src="/img/python/class_object_001.png" alt="Alt text" title="pic_01"></p>
<p>]]>
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Pipeline in RubyOnRails]]></title>
    <link href="http://yoursite.com/2015/08/06/pipeline-in-rubyOnRails/"/>
    <id>http://yoursite.com/2015/08/06/pipeline-in-rubyOnRails/</id>
    <published>2015-08-06T14:14:05.000Z</published>
    <updated>2015-08-07T16:24:53.000Z</updated>
    <content type="html"><![CDATA[<p>Here is a simple introduction about how to use pipeline in Rails Framework step by step.<br><a id="more"></a></p>
<p>Last week I spent several days on studying on how Rails pipeline works. I鈥檇 like to share you with what I finally found. Maybe we can take its advantage in future release.</p>
<p>There are several steps of applying pipeline into our project:</p>
<h2 id="Prepare_folders">Prepare folders</h2><p>Create folders under “app/assets” for each resource(here each controller is a resource) to store all related static files(js, css, image). For dashboards, we need to create two folders, under “app/assets/javascript” and “app/assets/stylesheet” respectively.<br><img src="/img/pipeline_001.jpg" alt="Alt text"></p>
<p>After the creation of the folders is done, we need to move the related js resource and css resource to that folders.</p>
<h2 id="Create_manifest">Create manifest</h2><p>Create a manifest for each resource to describe its static files. For dashboards, we need to create two manifest files, dashboards.js and dashboards.css<br><img src="/img/pipeline_002.jpg" alt="Alt text"></p>
<h2 id="Config_manifest">Config manifest</h2><p>In the manifest, we need to point out which static files should be compressed into a single file.</p>
<ul>
<li><p>dashboard.js<br><img src="/img/pipeline_003.jpg" alt="Alt text"></p>
</li>
<li><p>dashboard.css<br><img src="/img/pipeline_004.jpg" alt="Alt text"></p>
</li>
</ul>
<h2 id="Set_the_precompile_list">Set the precompile list</h2><p>All the static files that need to be compressed by pipeline should be specified explicitly in config/application.rb<br><img src="/img/pipeline_005.jpg" alt="Alt text"></p>
<h2 id="Compress_static_files">Compress static files</h2><p>Compress all the resource files with the command of <em>RAILS_ENV=production bin/rake assets:precompile</em></p>
<p>After compression, the name of resource file will be changed:<br><img src="/img/pipeline_006.jpg" alt="Alt text"></p>
<h2 id="Refer_compressed_resource">Refer compressed resource</h2><p>Add reference to the compressed resource file in application.html.erb. Here is the sample code:<br><img src="/img/pipeline_007.jpg" alt="Alt text"></p>
<p>Each page will only load its corresponding resource file. For example, dashboards page will only load dashboards.js and dashboards.css.<br>    聽<br>Since the all the js files have been compressed into dashboard.js and all the css file into dashboards.css, it would be sufficient for dashboards page to load only dashboards.js and dashboards.css</p>
<h2 id="Deal_with_images">Deal with images</h2><p>After applying pipeline, all images’ name will be changed. So we need to use rails tag to display image.</p>
<p>Firstly, we can use css to present image instead of img tag.</p>
<p>Then, We need to use .css.erb so that we can take the advantage of Rails Helper to convert the image鈥檚 name to its real name.<br><img src="/img/pipeline_008.jpg" alt="Alt text"></p>
<h2 id="Production_Model">Production Model</h2><p>Switch the web server to production environment with the command of rails server 鈥揺 production</p>
<p><em>Now we can access the compressed resource file in production model.</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Here is a simple introduction about how to use pipeline in Rails Framework step by step.<br>]]>
    
    </summary>
    
      <category term="RubyOnRails" scheme="http://yoursite.com/categories/RubyOnRails/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://yoursite.com/2015/08/01/hello-world/"/>
    <id>http://yoursite.com/2015/08/01/hello-world/</id>
    <published>2015-08-01T14:14:05.000Z</published>
    <updated>2015-08-06T14:25:35.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to Black Sheep’s blog.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to Black Sheep’s blog.</p>
]]>
    </summary>
    
      <category term="BlackSheep" scheme="http://yoursite.com/categories/BlackSheep/"/>
    
  </entry>
  
</feed>