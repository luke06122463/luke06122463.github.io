<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[BlackSheep]]></title>
  <subtitle><![CDATA[Let every blog records your growth]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com//"/>
  <updated>2015-09-21T07:40:49.000Z</updated>
  <id>http://yoursite.com//</id>
  
  <author>
    <name><![CDATA[Luke06122463]]></name>
    <email><![CDATA[lukaihaoshuai@outlook.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[User Guide for DataSpeaker]]></title>
    <link href="http://yoursite.com/2015/09/21/dataspeak-user-guide/"/>
    <id>http://yoursite.com/2015/09/21/dataspeak-user-guide/</id>
    <published>2015-09-21T05:52:27.000Z</published>
    <updated>2015-09-21T07:40:49.000Z</updated>
    <content type="html"><![CDATA[<ol>
<li><p>Access dataspeaker with <a href="http://server_IP:3000/dataspeaker" target="_blank" rel="external">http://server_IP:3000/dataspeaker</a></p>
<blockquote>
<p>Since user hasn’t logged in, he will be redirected to login page no matter what kind of page he is trying to visit.<br><img src="/img/dataspeaker/login.png" alt="Alt text"></p>
</blockquote>
</li>
<li><p>Click the <code>weibo account</code> button</p>
<blockquote>
<p>User will be redirected to weibo’s authentication page<br><img src="/img/dataspeaker/authentication.png" alt="Alt text"></p>
</blockquote>
</li>
<li><p>Finish the authentication page with your own weibo account</p>
<blockquote>
<p>It will return user’s access token. (In the later version, user will be redirected to dashboard automatically)<br><img src="/img/dataspeaker/callback.png" alt="Alt text"></p>
</blockquote>
</li>
<li><p>Access dataspeaker with <a href="http://server_IP:3000/dataspeaker" target="_blank" rel="external">http://server_IP:3000/dataspeaker</a> again</p>
<blockquote>
<p>Now user has passed weibo’s authentication and dataspeaker will display the dashboard for user.<br><img src="/img/dataspeaker/dashboard_unanalyzed.png" alt="Alt text"></p>
</blockquote>
</li>
<li><p>Trigger a task to collect and analyze data by click the <code>here</code> hyperlink</p>
<blockquote>
<p>New user needs to trigger the data analysis by himself.</p>
</blockquote>
</li>
<li><p>When user clicks the <code>here</code> hyperlink, an dialog will be popped up<br><img src="/img/dataspeaker/dashboard_trigger_analysis.png" alt="Alt text"></p>
</li>
<li><p>User needs to wait about 30s and refresh the page<br><img src="/img/dataspeaker/dashboard_part1.png" alt="Alt text"><br><img src="/img/dataspeaker/dashboard_part2.png" alt="Alt text"><br><img src="/img/dataspeaker/dashboard_part3.png" alt="Alt text"></p>
</li>
<li><p>With some tricky workaround, user also can see the analysis for their statuses<br><img src="/img/dataspeaker/dashboard_part4.png" alt="Alt text"><br><img src="/img/dataspeaker/dashboard_part5.png" alt="Alt text"></p>
</li>
</ol>
<p>Dataspeaker will analyze user’s followers from six dimensions:</p>
<p>.1 Gender distribution</p>
<ul>
<li>The percentage of male followers</li>
<li>The percentage of female followers</li>
<li>others</li>
</ul>
<p>.2 Active degree</p>
<ul>
<li>Daily Active, the statuses count is bigger than the days since weibo account was created</li>
<li>Monthly Active</li>
<li>Yearly Active</li>
<li>Diving</li>
</ul>
<p>.3 Authentication Type</p>
<ul>
<li>Big V, verified by weibo authority</li>
<li>Master, daily active user or who has more than 1000 followers</li>
<li>Genuine, active user</li>
<li>Zombie, whose statuses or followers is less than 10 or the ratio of friends to followers is bigger than 10</li>
</ul>
<p>.4 Location distribution</p>
<ul>
<li>Calculate the location distribution for all the followers</li>
<li>Show user how many his followers are in each province</li>
</ul>
<p>.5 Follower count</p>
<ul>
<li>How many followers my each follower has</li>
</ul>
<p>.6 Register time</p>
<ul>
<li>When each of my followers registered to weibo</li>
</ul>
<p>Dataspeaker will analyze user’s statuses from two dimensions:</p>
<p>.1 Statuses Timeline</p>
<ul>
<li>One timeline records when user posted his statuses and the other records when user posted his original statuses</li>
<li>User can learn which quarter he post the most statuses from the timeline</li>
</ul>
<p>.2 Statuses type</p>
<ul>
<li>How many statuses are picture-related, how many are video-related, how many are music-related and how many are text-related</li>
<li>How many original statuses are picture-related, how many are video-related, how many are music-related and how many are text-related</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<ol>
<li><p>Access dataspeaker with <a href="http://server_IP:3000/dataspeaker" target="_blank" rel="external">http://server_IP:3000/dataspe]]>
    </summary>
    
      <category term="DataSpeaker" scheme="http://yoursite.com/categories/DataSpeaker/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Deployment for DataSpeaker]]></title>
    <link href="http://yoursite.com/2015/09/21/dataspeak-deployment/"/>
    <id>http://yoursite.com/2015/09/21/dataspeak-deployment/</id>
    <published>2015-09-21T05:14:42.000Z</published>
    <updated>2015-09-21T05:30:31.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Set_up_your_environment">Set up your environment</h2><ol>
<li><p>Install Ruby on rails</p>
</li>
<li><p>Install Mongodb</p>
</li>
</ol>
<h2 id="Prepare_weibo_account">Prepare  weibo account</h2><ol>
<li><p>Access <a href="http://open.weibo.com/" target="_blank" rel="external">http://open.weibo.com/</a> with your weibo account</p>
</li>
<li><p>Register a web application with any name you want</p>
</li>
<li><p>Find out your server’s IP and set the callback url as <a href="http://server_IP:3000/dataspeaker/callback" target="_blank" rel="external">http://server_IP:3000/dataspeaker/callback</a></p>
</li>
<li><p>Write down the key and secret of the web application you have applied for</p>
</li>
<li><p>(non-mandatory)Register a new weibo account</p>
</li>
</ol>
<ul>
<li>only follow your weibo account</li>
<li>Do the same things as step 2</li>
</ul>
<h2 id="Pull_the_code_from_github">Pull the code from github</h2><ol>
<li>Git clone <a href="https://github.com/luke06122463/DataSpeaker.git" target="_blank" rel="external">https://github.com/luke06122463/DataSpeaker.git</a></li>
</ol>
<h2 id="Config_dataspeaker">Config dataspeaker</h2><ol>
<li><p>Go to dataspeaker folder</p>
</li>
<li><p>Bundle update</p>
</li>
<li><p>Bundle install</p>
</li>
<li><p>Modify the configuration so that dataspeaker can be used with your account</p>
</li>
</ol>
<ul>
<li>Find the development.rb under dataspeaker\config\environments</li>
<li>Replace the key, secret and callback url with your own setting</li>
<li>Config the correct url for mongodb</li>
</ul>
<h2 id="Start_dataspeaker">Start dataspeaker</h2><ol>
<li><p>Start Mongodb(in a new terminal)</p>
</li>
<li><p>Mongod –dbpath data/db</p>
</li>
</ol>
<h2 id="Start_webrick">Start webrick</h2><ol>
<li>Rails server</li>
</ol>
<h2 id="Visit_dataspeaker">Visit dataspeaker</h2><ol>
<li><a href="http://server_IP:3000/dataspeaker" target="_blank" rel="external">http://server_IP:3000/dataspeaker</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Set_up_your_environment">Set up your environment</h2><ol>
<li><p>Install Ruby on rails</p>
</li>
<li><p>Install Mongodb</p>
</li>
</]]>
    </summary>
    
      <category term="DataSpeaker" scheme="http://yoursite.com/categories/DataSpeaker/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BSM Update - create new bookmark]]></title>
    <link href="http://yoursite.com/2015/08/15/bookmark-creation-for-bsm/"/>
    <id>http://yoursite.com/2015/08/15/bookmark-creation-for-bsm/</id>
    <published>2015-08-15T15:53:05.000Z</published>
    <updated>2015-08-15T16:02:27.000Z</updated>
    <content type="html"><![CDATA[<p>BSM provides two approach for user to store their bookmarks:</p>
<ol>
<li>Fullfill the form for the creation of bookmark manually</li>
<li>Export the bookmarks from Chrome and Import the file into BSM</li>
</ol>
<p>Currently, I only have had the time for implementing the first way.</p>
<p>Here is simple demostration for its workflow.</p>
<p>Firstly, user needs to click the <code>New</code> button on the header next to the search bar.<br><img src="/img/bsm/new_001.png" alt="Alt text"></p>
<p>Then a form will be prompted.<br><img src="/img/bsm/new_002.png" alt="Alt text"></p>
<p>User needs to complete the form manually.<br><img src="/img/bsm/new_003.png" alt="Alt text"></p>
<p>After user finish the form and click the <code>Create</code> button, then he will see the new bookmark on the page.<br><img src="/img/bsm/new_004.png" alt="Alt text"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>BSM provides two approach for user to store their bookmarks:</p>
<ol>
<li>Fullfill the form for the creation of bookmark manually</li>
<l]]>
    </summary>
    
      <category term="Bookmark Search" scheme="http://yoursite.com/categories/Bookmark-Search/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BSM Update - login module]]></title>
    <link href="http://yoursite.com/2015/08/15/login-module-for-bsm/"/>
    <id>http://yoursite.com/2015/08/15/login-module-for-bsm/</id>
    <published>2015-08-15T15:01:50.000Z</published>
    <updated>2015-08-16T15:56:46.000Z</updated>
    <content type="html"><![CDATA[<p>Since BSM will manage the bookmarks collection based on user which means different users could only see their own bookmarks, I need to design and implement the login mechanism for BSM.</p>
<a id="more"></a>
<h2 id="Login_mechanism">Login mechanism</h2><p>From my point of view, a completed login mechanism should contains following parts:</p>
<ol>
<li><p>Authentication.</p>
<blockquote>
<p>Anyone who try to access BSM website needs be validated to identify whether they are qualified users. Only those who have registered themself as BSM’s member can access BSM.</p>
</blockquote>
</li>
<li><p>Authorization.</p>
<blockquote>
<p>Web resource is only available to the user who has the corresponding permission. If anyone try to access some resource that isn’t available for him, BSM will deny his request even he is a qualified user even he has logged in.</p>
</blockquote>
</li>
<li><p>User information and User preference</p>
<blockquote>
<p>When user pass the authentication check and authorization check, BSM will show user’s profile and apply his preference for himself.</p>
</blockquote>
</li>
<li><p>Route Control</p>
</li>
<li><p>Session timeout</p>
</li>
</ol>
<p>Before we keep going on, I’d like show you how my login page looks like:<br><img src="/img/bsm/login_001.png" alt="Alt text"></p>
<p>When user passes the validation, then he will see the following page:<br><img src="/img/bsm/login_002.png" alt="Alt text"></p>
<p>Now, let me introduce how I implement the login mechanism in BSM project.</p>
<h3 id="Authentication">Authentication</h3><p>The essence of authentication is to confirm whether the user is qualified. With some investigation, I conclude all the scenarios into three approaches:</p>
<ul>
<li>User starts his travel from the login page firstly.</li>
<li>User try to access some resource directly without logging in first.</li>
<li>User refresh the current resource but he may be not the member any more at that time.</li>
</ul>
<p>For the first situation, we can prepare a login page so that user can have a chance to claim himself.</p>
<p>For the other situation, we need to check whether the session is active. If the session is empty, then we will direct the user to login page for he has not logged in yet.</p>
<h4 id="Login_module">Login module</h4><p>There are only two things we need to do for achieving the login module, a login page and implementing the functionality behind the page. </p>
<p>Login page is first thing that our user will see when they try to access our product. Usually, the first sight will influence people a lot on their judgement about the thing they saw. So I try to make my login page attractive as much as possible.</p>
<p>In BSM I adopt flat-ui as my first choice for style sheets, here is how my login page looks like:<br><img src="/img/bsm/login_001.png" alt="Alt text"></p>
<p>Also attach its implementation:<br><img src="/img/bsm/code_001.png" alt="Alt text"></p>
<p>Now we need to implement remaining part step by step.</p>
<h4 id="Implement_authentication_in_the_backend">Implement authentication in the backend</h4><blockquote>
<p>Because time is limited, I simplify the authentication by directly query the target user from mongodb’s users collection by the account the user inputs in login page. If the query result is not empty, then the user is a qualified member.<br><img src="/img/bsm/code_002_1.png" alt="Alt text"><br><img src="/img/bsm/code_002_2.png" alt="Alt text"></p>
<p>When user passes the authentication, his personal information and login information will be store into session.</p>
</blockquote>
<h4 id="Create_loginService_to_serve_for_user_login-">Create loginService to serve for user login.</h4><p><img src="/img/bsm/code_003.png" alt="Alt text"></p>
<blockquote>
<p><code>urlObj</code> in <code>var login = function(username, password)</code> points to <code>AuthController#prologin</code></p>
<p>Now all the authentication-related request will be sent by loginService.</p>
</blockquote>
<h4 id="Create_loginController_to_serve_for_user_login">Create loginController to serve for user login</h4><blockquote>
<p>Here is loginController’s core code:<br><img src="/img/bsm/code_004.png" alt="Alt text"></p>
<p>When user click the ‘sign in’ button on the login page, <code>handleLoginBtn</code> in loginController will be triggered. It will ask the loginService to send a login request to authenticate when user account is correct. </p>
<p>If user logs in successfully, the callback function <code>handleLoginSuccess</code> will take out user’s profile from the request and store them in the userService which is designed for setting and getting all kinds of user’s information, including profile, preference, permissions, environment(timezone .etc). At last, <code>handleLoginSuccess</code> will broadcast <code>AUTH_EVENTS.LOGIN_SUCCESS</code> to inform other module that authentication has passed.</p>
</blockquote>
<h4 id="Connect_the_loginController_with_login_page">Connect the loginController with login page</h4><h3 id="Authorization">Authorization</h3><p>Authorization in js side contains at least two layers of meaning, whether user is qualifed and whether qualified user has the permission to the resource he is asking for.</p>
<p>So for each request, we will check whether he has logged in or not. If not, user will be redirected to login page. For any qualifed user, we need to check whether he has the corresponding permission. If not, redirect him to login page.</p>
<p>Here is the design for the workflow:</p>
<ol>
<li><p>If user wants to visit login/register page, then simply open the resource for him.</p>
</li>
<li><p>If user wants to visit other resource, then check whether he has logged in.</p>
</li>
</ol>
<ul>
<li>If not, then redirect him to login page</li>
<li>If user has logged in, then check his permission</li>
</ul>
<p>But the final implementation is a little different from the original design:</p>
<ol>
<li><p>If user wants to visit login/register page, then simply open the resource for him.</p>
</li>
<li><p>If user wants to visit other resource, then check whether userService is empty and session is active. When user logged in, the userService will be filled with user’s profile which means if userService is not empty, user must have logged in. When user logged in, the session will be filled with some identity which means if session is still active, user must have logged in. The difference between userService and Session is the former is in JS side and the latter is in Server side. So we will check the former before ask for the session.</p>
</li>
</ol>
<ul>
<li>If userService is not empty, then check user’s permission to decide which page will be directed? login page or other resource?</li>
<li>If userService is empty, then check user’s session. If it is active, then check user’s permission.</li>
<li>If userService is empty, so is session, then simply redirect the user to login page<br><em>When user logged in then refresh the page or open a new tag, then userService is empty while the session is still active</em></li>
</ul>
<ol>
<li>If user has logged in, then check whether he has the permission to access the resource</li>
</ol>
<ul>
<li>If permission deny, then simply redirect the user to login page</li>
<li>If permission allow but userService is empty, then retrieve user’s profile back to userService and return the resource to user.</li>
<li>If permission allow and userService is not empty, then return the resource to user.</li>
</ul>
<p>In order to intercept each request, I listen for <code>RouteChangeStart</code> event. In this event, I will check whether userService is empty before any request go further.<br><img src="/img/bsm/code_005.png" alt="Alt text"></p>
<p>If userService is empty, then event <code>AUTH_EVENTS.USER_AUTHENTICATION</code> will be broadcasted which will sent an request to backend to check whether the session is active and return user’s profile if session is proved still active.<br><img src="/img/bsm/code_006.png" alt="Alt text"></p>
<p>If everything goes well, then the user’s profile will be set into userService and event <code>AUTH_EVENTS.LOGIN_SUCCESS</code> will be broadcasted.</p>
<h3 id="User_information_and_User_preference">User information and User preference</h3><p>Use userService to intialize the welcome page for more user friendly. More detail please see annotation.<br><img src="/img/bsm/code_007.png" alt="Alt text"></p>
<h3 id="Route_Control">Route Control</h3><p>Before authentication/authorization, we need to write down where user wants to go so that we can redirect him to his destination. </p>
<p>When routeChangeStart broadcasts event <code>AUTH_EVENTS.USER_AUTHENTICATION</code>, the original path will be sent along with the event. So I store it into LocationService.</p>
<p>If authentication/authorization failed, then user will be simply redirected to login page.</p>
<p>If not, <code>locationService.pathToTargetLocation();$route.reload();</code> will redirect the user to his destination.</p>
<h3 id="Session_timeout">Session timeout</h3><p>Backend will check whether session has been timed out, whether session is from the same IP, whether session is from the same browser, etc, for each request.<br><img src="/img/bsm/code_008.png" alt="Alt text"></p>
<p>If session is proved invalid, then response with 401 will be return, then an relogin dialog will be prompt to ask user to log in again to activate his session.</p>
<p>Finally, you will see the welcome page.<br><img src="/img/bsm/login_002.png" alt="Alt text"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Since BSM will manage the bookmarks collection based on user which means different users could only see their own bookmarks, I need to design and implement the login mechanism for BSM.</p>]]>
    
    </summary>
    
      <category term="Bookmark Search" scheme="http://yoursite.com/categories/Bookmark-Search/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BSM introduction]]></title>
    <link href="http://yoursite.com/2015/08/13/bsm-introduction/"/>
    <id>http://yoursite.com/2015/08/13/bsm-introduction/</id>
    <published>2015-08-13T15:33:52.000Z</published>
    <updated>2015-08-15T16:02:59.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Introduction">Introduction</h2><p>One side, I love chrome’s bookmark because it’s so convenient to manage all the web resource I cherished. But on the other side, I can’t help complaining its simplicity. Here is what bother me most:</p>
<ul>
<li><p>With several year’s accumulation, it becomes extremely hard to find what I want from such a messy url collection. How many times I have to go through each of bookmark folders to find the target. What was worse, it’s  very likely you have no idea to your bookmark until you open the url and see the resource.</p>
</li>
<li><p>Considering the network condition of China, it’s a great pain to re-open the bookmark since some request is hard to retrieve back, especially those resource whose server is outside of mainland.  Re-opening bookmark is time-consuming.</p>
</li>
<li><p>You have no idea when your bookmark is no longer available. Maybe author deletes their article or maybe the website is blocked according to some policy.</p>
</li>
<li><p>Since chrome has been driven out of China, we can’t sync its bookmarks between different platform. I always worry about one day I may loss all of my bookmarks since it’s not portable.</p>
</li>
</ul>
<p>All in all, chrome’s bookmarks can’t fully support my requirement. So I decide to maintain and extend the bookmarks all by myself.</p>
<p>In order to maintain bookmark and achieve the functionality that I ask for, I plan to design and implement ‘Bookmark Search Manager’ project. Let’s call it ‘BSM’ for short. </p>
<p>Here is brief list of its features. </p>
<ul>
<li><p>Manage bookmarks by user</p>
<blockquote>
<p>BSM is basing on membership. User need to register as its member at first and all the  functionality are not available until he has logged in.</p>
</blockquote>
</li>
<li><p>Branch-based management</p>
<blockquote>
<p>User can create/update bookmark repository by uploading chrome’s bookmark to BSM. Each update will only merge the diff to the branch and all the commit will be recorded so that it’s possible for user to switch to any version he wants. Actually, we call it go forward and back mechanism just as browser’s go back/forward button.</p>
</blockquote>
</li>
<li><p>Offline bookmarks</p>
<blockquote>
<p>BSM will do crawling for each of the bookmark automatically so that user can access the resource behind the bookmark offline without being scared of resource unavailable.</p>
</blockquote>
</li>
<li><p>Show summary for bookmark</p>
<blockquote>
<p>User can add summary for each of bookmark and BSM will show title and summary of bookmark to user. This will help user have a better understanding of the resource and focus on what they are truly interested in.</p>
</blockquote>
</li>
<li><p>Filter bookmarks by its organization</p>
<blockquote>
<p>Currently, chrome’s bookmark is organized by folder.  So it’s reasonable to provide a folder-based filter mechanism that user can choose a folder to see the bookmark under that folder. Maybe we can provide multiple selection.</p>
</blockquote>
</li>
<li><p><strong>Provide search functionality for bookmark</strong></p>
<blockquote>
<p>Ideally, I want to provide search functionality for the whole website. User can search the specific bookmark according to the keywords he inputs.</p>
</blockquote>
</li>
<li><p>Support for multiple bookmarks</p>
</li>
</ul>
<h2 id="Where_the_idea_come_from?">Where the idea come from?</h2><p>cTo be frank, a well constructed bookmark manager is really something that I desired but it doesn’t worth my so much leisure time to solve such kind of a simple bothering.</p>
<p>Two years has past since I graduated from college. In my past two years, I learned a lot of new technologies, including: ruby on rails, restful api, elasticsearch, angularjs, dojo, easyui.</p>
<p>I’m always wondering do I really make any progress? do I fully understand those technologies? their usage? the mechanism behind them? are they still separated technologies for me or I can consider them as an integrated solution? With those confusion, I decide to take some action and do something with those new skill.</p>
<h2 id="Architecture">Architecture</h2><p>Here is the architecture for Bookmark Search Manager</p>
<ul>
<li><p>Front-end: AngularJS + Bootstrap</p>
<blockquote>
<p>BSM is a single page application. </p>
</blockquote>
</li>
<li><p>Web Server: ruby on rails</p>
<blockquote>
<p>Currently, I adopt webrick as BSM’s web server</p>
</blockquote>
</li>
<li><p>Web API: Grape</p>
</li>
<li><p>Database: ElasticSearch</p>
<blockquote>
<p>I use ElasticSearch to replace DB.</p>
</blockquote>
</li>
<li><p>Index Engine: Tika + ElastiSearch</p>
<blockquote>
<p>when and how to index resource is not decided yet</p>
</blockquote>
</li>
</ul>
<p>If everything goes well, I’d like to rebuild BSM with the technologies that I’m fond of.</p>
<ul>
<li><p>Front-end: AngularJS + Bootstrap</p>
<blockquote>
<p>BSM is a single page application. </p>
</blockquote>
</li>
<li><p>Web Server: Nodejs + Express</p>
</li>
<li><p>Database: MongoDB</p>
</li>
<li><p>Index Engine: Tika + ElastiSearch</p>
<blockquote>
<p>when and how to index resource is not decided yet</p>
</blockquote>
</li>
</ul>
<h2 id="Detail_Design">Detail Design</h2><h3 id="Detail_Design_for_Front_End">Detail Design for Front End</h3><p>GUI should contains the following page:</p>
<ul>
<li><p>Login</p>
<blockquote>
<p>User can log in</p>
</blockquote>
</li>
<li><p>Dashboard</p>
<blockquote>
<p>User can see all the bookmarks on this page</p>
<p>User can filter the bookmarks</p>
<p>User can add summary for bookmark</p>
<p>User can preview bookmark</p>
</blockquote>
</li>
<li><p>Search</p>
<blockquote>
<p>User can search specific markbooks by keywords</p>
</blockquote>
</li>
<li><p>Config</p>
<blockquote>
<p>User can create new repository</p>
<p>User can update the repository</p>
<p>User can view the commit history</p>
<p>User can switch branch</p>
</blockquote>
</li>
</ul>
<p>CUI should contains the following modules (I have implemented them in my daily work):</p>
<ul>
<li><p>Authorization (access controll)</p>
</li>
<li><p>Browser Check</p>
</li>
<li><p>Localization (i18n/L10)</p>
</li>
<li><p>Route control</p>
</li>
<li><p>Error Handling</p>
</li>
</ul>
<h3 id="Detail_Design_for_Web_Service">Detail Design for Web Service</h3><p>Web Service should contains four controllers:</p>
<ul>
<li><p>Application_Controller</p>
<blockquote>
<p>Check for authentication and session timeout</p>
</blockquote>
</li>
<li><p>Auth_Controller</p>
<blockquote>
<p>Responsible for authentication</p>
</blockquote>
</li>
<li><p>Bookmark_Controller</p>
<blockquote>
<p>Serve for dashboard page</p>
</blockquote>
</li>
<li><p>Config_Controller</p>
<blockquote>
<p>Serve for config page</p>
</blockquote>
</li>
<li><p>Search_Controller</p>
<blockquote>
<p>Serve for search page</p>
</blockquote>
</li>
</ul>
<h3 id="Detail_Design_for_Web_API">Detail Design for Web API</h3>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Introduction">Introduction</h2><p>One side, I love chrome’s bookmark because it’s so convenient to manage all the web resource I che]]>
    </summary>
    
      <category term="Bookmark Search" scheme="http://yoursite.com/categories/Bookmark-Search/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hex to unicode]]></title>
    <link href="http://yoursite.com/2015/08/08/hex-to-unicode/"/>
    <id>http://yoursite.com/2015/08/08/hex-to-unicode/</id>
    <published>2015-08-07T16:27:05.000Z</published>
    <updated>2015-08-07T16:49:10.000Z</updated>
    <content type="html"><![CDATA[<p>Sometimes, we need to read data from old-fashioned devise. Unfortunately, many old-fashioned devise doesn’t support unicode very well. So we need to translate data from any format to unicode.</p>
<a id="more"></a>
<p>Now things become clear that the string returned by ldap API is hex rather than Unicode. We need to format these string to utf-8 before taking any advantage of them.</p>
<p>There are mainly two ways to use ldap result:</p>
<ol>
<li>show the ldap result on web client</li>
<li>store the ldap result to elasticsearch</li>
</ol>
<p>I write a common function to finish the formatting work and here is its definition:<br><img src="/img/unicode_001.jpg" alt="Alt text"></p>
<p>You can use the function to format every ldap result with the usage of <em>Format::String.format_json_to_unicode(source)</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Sometimes, we need to read data from old-fashioned devise. Unfortunately, many old-fashioned devise doesn’t support unicode very well. So we need to translate data from any format to unicode.</p>]]>
    
    </summary>
    
      <category term="RubyOnRails" scheme="http://yoursite.com/categories/RubyOnRails/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nginx sub-domain]]></title>
    <link href="http://yoursite.com/2015/08/08/nginx-sub-domain/"/>
    <id>http://yoursite.com/2015/08/08/nginx-sub-domain/</id>
    <published>2015-08-07T16:25:32.000Z</published>
    <updated>2015-08-07T16:48:48.000Z</updated>
    <content type="html"><![CDATA[<p>In order to make the search web and admin search share the same root url (<a href="https://localhost" target="_blank" rel="external">https://localhost</a>) and distinguish each by sub domain(/admin and /search respectively), we need to modify most URL in our project since currently we use absolute path to visit resource.</p>
<p>When we configure nginx to support it, we need to change the way of how we request resource. </p>
<p>For example, currently we access an image with the url of “<a href="https://localhost:3000/assets/image01.jpg”" target="_blank" rel="external">https://localhost:3000/assets/image01.jpg”</a>. But after we turn on nginx’s sub domain functionality, we need to change the way to “<a href="https://localhost/admin/assets/image01.jpg”" target="_blank" rel="external">https://localhost/admin/assets/image01.jpg”</a>  </p>
<p>Actually, we need to change all the url on our web pages. </p>
<h2 id="Here_is_the_resource_category:">Here is the resource category:</h2><ol>
<li>Assets<br>1-a. Style sheets<br>1-b. Javascript files<br>1-c. Image on the html<br>1-d. Image in css<br>1-e. Image inserted into html by js</li>
</ol>
<ol>
<li>Request url<br> 2-a. url on html (hyper link &amp; form)<br> 2-b. url in js (such as ajax url)</li>
</ol>
<p>With some investigation, we found we can take advantage of Rails tag to solve the problem.</p>
<p>When we set  <em>config.relative_url_root = “/admin”</em>  in application.rb, then Rails will prepend  <em>“/admin”</em>  when generating links. So we need to use rails tag in our project as more as possible.</p>
<h3 id="As_to_1-a_(style_sheets)_and_1-b_(javascript_files)">As to 1-a (style sheets) and 1-b (javascript files)</h3><p>I use rails tag ‘javascript_include_tag’ and ‘stylesheet_link_tag’ to request css &amp; js resource.</p>
<p>Before:<br><img src="/img/nginx_001.jpg" alt="Alt text"></p>
<p>After:<br><img src="/img/nginx_002.jpg" alt="Alt text"></p>
<p>Now 1-a (style sheets) and 1-b (javascript files) can be requested in sub-domain mode.</p>
<h3 id="As_to_1-c_(Image_on_the_html)_and_2-a_(url_on_html)">As to 1-c (Image on the html) and 2-a (url on html)</h3><p>There are two ways to introduce them into html.</p>
<p>One way is  creating them with rails tag, such as image_path. Since the url is created by rails tag, then it should work well in sub-domain mode. Just leave it alone.</p>
<p>The other way is the url is specified by developer. The url can be relative-path and it also can be absolute-path.</p>
<ol>
<li>If it is relative-path, then it would work well in sub-domain mode.</li>
<li>If it is absolute-path, then we need to prepend the sub-domain for the url. Fortunately, we can get the sub-domian  from  <em>config.relative_url_root</em> and what we need to do is only adding the <em>relative_url_root</em> before the url.</li>
</ol>
<p>I store <em>relative_url_root</em> into the variable <em>@root_url</em>.<br><img src="/img/nginx_003.jpg" alt="Alt text"></p>
<p>So if you request an image in html with the following way:<br><img src="/img/nginx_004.jpg" alt="Alt text"><br>Now you need to change it to:<br><img src="/img/nginx_005.jpg" alt="Alt text"></p>
<h3 id="As_to_1-d_(Image_in_css)">As to 1-d (Image in css)</h3><p>We can use relative-path to access image</p>
<p>Before:<br><img src="/img/nginx_006.jpg" alt="Alt text"></p>
<p>After:<br><img src="/img/nginx_007.jpg" alt="Alt text"></p>
<h3 id="As_to_1-e(Image_inserted_into_html_by_js)_and_2-b_(url_in_js)">As to 1-e(Image inserted into html by js) and 2-b (url in js)</h3><p>The url must be specified by developer. So,</p>
<ol>
<li>If it is relative-path, then it would work well in sub-domain mode.</li>
<li>If it is absolute-path, then we need to prepend the sub-domain for the url.</li>
</ol>
<p>There is a global js variable <em>global_root_url</em> which represent the <em>relative_url_root</em></p>
<p>So if you specify url in js with the following way:<br><img src="/img/nginx_008.jpg" alt="Alt text"></p>
<p>Then you need to change it to:<br><img src="/img/nginx_009.jpg" alt="Alt text"></p>
<p>Besides, when we use redirect_to to redirect user to some page, then we also need to specify the sub domain for url.<br>Before:<br><img src="/img/nginx_010.jpg" alt="Alt text"><br>After:<br><img src="/img/nginx_011.jpg" alt="Alt text"></p>
<p>Actually, if we don’t set <em>config.relative_url_root</em>, then both <em>@root_url</em>  and <em>global_root_url</em> are empty string.</p>
<p>I have tested it in my environment and it works well both in development and production mode.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>In order to make the search web and admin search share the same root url (<a href="https://localhost" target="_blank" rel="external">http]]>
    </summary>
    
      <category term="RubyOnRails" scheme="http://yoursite.com/categories/RubyOnRails/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python的类机制]]></title>
    <link href="http://yoursite.com/2015/08/06/Python%E7%9A%84%E7%B1%BB%E6%9C%BA%E5%88%B6/"/>
    <id>http://yoursite.com/2015/08/06/Python的类机制/</id>
    <published>2015-08-06T14:20:09.000Z</published>
    <updated>2015-08-15T16:08:28.000Z</updated>
    <content type="html"><![CDATA[<h2 id="初识Python类机制">初识Python类机制</h2><p>首先参照图(pic_01):<br><img src="/img/python/class_object_001.png" alt="Alt text" title="pic_01"></p>
<p>我们可知Python在类机制的实现中引入了两个很纠结的概念：PyTypeObject和基类，从而引出了Class与Instance以及基类和子类的概念。</p>
<p>原以为这两个概念并不存在太大的区别，可在逐步了解Python的对象机制的过程中，我发现两者相辅相成，相互交织却在功能划分上又泾渭分明。</p>
<p>对于一套完整的类实现机制，其流程为:</p>
<ol>
<li>创建Class对象（<code>PyTypeObject</code>）</li>
<li>实例化对象来得到Instance（<code>PyObject</code>）</li>
<li>使用Instance</li>
</ol>
<p>其中，Class对象对应了上图（pic_01）中的中间部分，Instance对象对应最右边，而在最左边还有一个 <code>&lt;type, &#39;type&#39;&gt;</code> 对象，该对象在创建Class对象的过程中起了至关重要的作用。所以图(pic_01)更多地向我们展示了类机制的<code>is-instance-of</code>关系，即instance是怎么一步步创建出来的。我觉得这很重要，它帮助我们理清了Python类机制的层次关系，解答了Python中的先有鸡还是先有蛋的问题。通过这样的叙述关系，我们知道了Instance对象是怎么来的，同样地，我们也弄清楚了负责创建Instance的Class对象又是怎么被创建。这对于我们了解Python的类机制怎么从无到有以及将Class与Instance的关系抽象出来并与其他语言的类概念联系起来，都非常有帮助。</p>
<p>但上面的描述不够具体，忽略了很多的实现细节。要想从根本上理解Python的对象机制，我们不仅要从设计上理解各个概念之间的关系，并且我们还需要从实现上窥视所谓的类和对象的本质。换种说法就是怎样用其他语言来实现Python的类机制。</p>
<h2 id="类机制的实现">类机制的实现</h2><p>简单的说，Instance对象就是一堆数据以及围绕这些数据进行操作的一组方法的集合。在类机制里面，我们称数据之为成员变量，称围绕这些数据进行操作的方法为成员方法。</p>
<h3 id="C++中的实现">C++中的实现</h3><p>在C++中，Instance对象无非就是一段固定的内存和一堆指令码的集合。内存用于存放数据，指令码用于操作内存中的数据以及一些逻辑操作。</p>
<p>在C++的世界里，Class仅仅是Instance的模板，它仅仅定义了Instance应该是什么样子的，有哪些成员变量，有哪些成员方法。这样纯粹的说明是不需要使用内存的（为了简化问题，这里不考虑static成员变量，话说static存放的内存空间也跟成员变量不一样=.=!!），所以在C++中，Class仅仅是一堆指令码的集合（指令码会从硬盘读取到内存，但因为概念不一样，所以区别于一般的存放程序数据的内存）。而Instance就不一样了，在Class的new函数（也是一堆指令码&gt;.&lt;）的指挥下开始申请内存然后初始化成员变量，并且通过函数指针使用Class中定义的成员方法来操作内存中的成员变量。</p>
<p>总结一下就是，在C++的实现中：</p>
<ol>
<li>Class用于描述Instance的结构和方法，其本质是一堆指令码，包括用于操作Instance的结构的new、destroy等方法，以及提供给Instance使用的方法。</li>
<li>Instance是一段固定的内存和一堆指令码的集合，是面向对象的设计思想中的核心。其内存的申请和分配均由Class的new函数来负责，而成员方法均由Class来定义。</li>
</ol>
<blockquote>
<p>脑洞大开一下，我再补充个观点，未得到验证所以不见得对，请大家绕道。</p>
<p>由于C++是对C的补充和扩展，所以它的实现也是依托于C。但是C本身是面向过程的语言，只有function和variable。套用我先前所提到的逻辑，<em>Instance是一段固定的内存和一堆指令码的集合</em>，慢着，怎么这么耳熟，这不就是variable（一段固定的内存）+ function（一堆指令码）的组合嘛！但是variable不能提前定义啊，否则它的内存地址就确定下来了，并且不同的Instance应该拥有属于自己的variable集合，这样的动态分配是Instance本身所不具备的功能，需要在更高层完成；同样地，我们不能重复定义function，所有的Instance应该share相同的function集合，再加上继承、共私有机制的引进，Instance本身无法实现这样的需求，同样需要在更高层完成。所以这时候我们需要Class来完成这些工作。Class通过new函数来为新创建的Instance申请空间，并在申请到的空间中申明variable；紧接着variable，Class会在之后的内存中存放Instance需要的函数所对应的函数指针。每个函数会根据所分配的首地址以及成员变量的地址偏移来得到variable并对其操作。大概这样就能实现了吧，么么哒~</p>
</blockquote>
<h3 id="Python中的实现">Python中的实现</h3><p>至于基类的继承，更多地是属性的重用，所以图(pic_01)并未很好地展现继承的层次关系。</p>
<p>以上是我对<code>is-instance-of</code>以及<code>is-kind-of</code>的初步理解。接下来，我将通过对Class对象以及instance对象创建过程的剖析来探究PyTypeObject。不可避免地，我们会涉及到类的继承，因为它们本来就都是整个Class对象的一部分。</p>
<p>图(pic_01)很好地展示了Python的类机制的层次关系，即<code>metaclass</code>负责创建其他的class对象，而这些被创建的class对象负责创建instance对象，所以也就出现了两层<code>is-instance-of</code>关系。也正是因为存在这两层的<br><code>is-instance-of</code>，class对象和instance对象才能从无到有。我在阅读《Python源码剖析》的过程中，不曾看到哪个PyTypeObject的ob_type所指向的非<code>metaclass</code>，这样的机制极大地简化了Python的类机制，易于理解也易于实现。</p>
<p><strong>为了更贴近Python的语言风格，在接下来的描述中，如果涉及到概念，我将延续先前使用的Class&amp;Instance这样的术语，但在涉及到Python的具体实现中我将会</strong></p>
<ol>
<li>用<code>PyTypeObject</code>来表示Class对象</li>
<li>用<code>PyObject实例</code>来表示Instance对象</li>
<li>用<code>PyObject</code>来泛指Python的所有对象（everything in python is a object）</li>
<li>用<code>PyBaseObject_Type</code>来表示所有Python最基本的Class对象，所有的<code>PyObject</code>均继承自它。原型为<code>&lt;type, &#39;object&#39;&gt;</code></li>
</ol>
<p>为了更好地展示如何通过<code>PyTypeObject</code>来创建<code>PyObject实例</code>，我在这里展示另外一张图(pic_02):<br><img src="/img/python/class_object_002.png" alt="Alt text" title="pic_02"></p>
<p>标上序号的虚线箭头代表了创建整数对象的函数调用流程，可以概括为：首先<code>PyTypeObject</code>(在这里即为<code>PyInt_type</code>)的tp_new会被调用，该函数可以视为new操作符（为instance对象申请内存空间以及初始化工作），若tp_new为NULL，<code>PyTypeObject</code>对象会去寻找基类(<code>PyBaseObject_Type</code>)的tp_new函数。因为所有的<code>PyObject</code>都继承自<code>PyBaseObject_Type</code>，而<code>PyBaseObject_Type</code>的tp_new的实现不为NULL，所以任何<code>PyObject</code>总能找到tp_new函数来完成用<code>PyObject实例</code>的创建。在具体的实现中，tp_new函数会访问<code>PyTypeObject</code>的tp_basicsize来确定要申请的空间大小；当空间申请结束之后，tp_new会调用tp_init函数来完成初始化工作。</p>
<p>Python的对象创建机制比较复杂，但工作原理却相当明朗，即Class对象调用自身的tp_new，赋以自身的一些必要属性作为参数，来为Instance对象分配内存和初始化工作。所以才有我先前的结论：Python是由Class对象（<code>PyTypeObject</code>）来负责对象的实例化，其中，我们看到某一Class对象的tp_new的具体实现可以不是由自身给出，而是顺藤摸瓜，通过一系列的函数指针的传递和函数调用来确定最终的函数实现。</p>
<p>在这里我们可以看到继承的运用。继承更多地</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="初识Python类机制">初识Python类机制</h2><p>首先参照图(pic_01):<br><img src="/img/python/class_object_001.png" alt="Alt text" title="pic_01"></p>
<p>]]>
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Pipeline in RubyOnRails]]></title>
    <link href="http://yoursite.com/2015/08/06/pipeline-in-rubyOnRails/"/>
    <id>http://yoursite.com/2015/08/06/pipeline-in-rubyOnRails/</id>
    <published>2015-08-06T14:14:05.000Z</published>
    <updated>2015-08-07T16:24:53.000Z</updated>
    <content type="html"><![CDATA[<p>Here is a simple introduction about how to use pipeline in Rails Framework step by step.<br><a id="more"></a></p>
<p>Last week I spent several days on studying on how Rails pipeline works. I鈥檇 like to share you with what I finally found. Maybe we can take its advantage in future release.</p>
<p>There are several steps of applying pipeline into our project:</p>
<h2 id="Prepare_folders">Prepare folders</h2><p>Create folders under “app/assets” for each resource(here each controller is a resource) to store all related static files(js, css, image). For dashboards, we need to create two folders, under “app/assets/javascript” and “app/assets/stylesheet” respectively.<br><img src="/img/pipeline_001.jpg" alt="Alt text"></p>
<p>After the creation of the folders is done, we need to move the related js resource and css resource to that folders.</p>
<h2 id="Create_manifest">Create manifest</h2><p>Create a manifest for each resource to describe its static files. For dashboards, we need to create two manifest files, dashboards.js and dashboards.css<br><img src="/img/pipeline_002.jpg" alt="Alt text"></p>
<h2 id="Config_manifest">Config manifest</h2><p>In the manifest, we need to point out which static files should be compressed into a single file.</p>
<ul>
<li><p>dashboard.js<br><img src="/img/pipeline_003.jpg" alt="Alt text"></p>
</li>
<li><p>dashboard.css<br><img src="/img/pipeline_004.jpg" alt="Alt text"></p>
</li>
</ul>
<h2 id="Set_the_precompile_list">Set the precompile list</h2><p>All the static files that need to be compressed by pipeline should be specified explicitly in config/application.rb<br><img src="/img/pipeline_005.jpg" alt="Alt text"></p>
<h2 id="Compress_static_files">Compress static files</h2><p>Compress all the resource files with the command of <em>RAILS_ENV=production bin/rake assets:precompile</em></p>
<p>After compression, the name of resource file will be changed:<br><img src="/img/pipeline_006.jpg" alt="Alt text"></p>
<h2 id="Refer_compressed_resource">Refer compressed resource</h2><p>Add reference to the compressed resource file in application.html.erb. Here is the sample code:<br><img src="/img/pipeline_007.jpg" alt="Alt text"></p>
<p>Each page will only load its corresponding resource file. For example, dashboards page will only load dashboards.js and dashboards.css.<br>    聽<br>Since the all the js files have been compressed into dashboard.js and all the css file into dashboards.css, it would be sufficient for dashboards page to load only dashboards.js and dashboards.css</p>
<h2 id="Deal_with_images">Deal with images</h2><p>After applying pipeline, all images’ name will be changed. So we need to use rails tag to display image.</p>
<p>Firstly, we can use css to present image instead of img tag.</p>
<p>Then, We need to use .css.erb so that we can take the advantage of Rails Helper to convert the image鈥檚 name to its real name.<br><img src="/img/pipeline_008.jpg" alt="Alt text"></p>
<h2 id="Production_Model">Production Model</h2><p>Switch the web server to production environment with the command of rails server 鈥揺 production</p>
<p><em>Now we can access the compressed resource file in production model.</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Here is a simple introduction about how to use pipeline in Rails Framework step by step.<br>]]>
    
    </summary>
    
      <category term="RubyOnRails" scheme="http://yoursite.com/categories/RubyOnRails/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://yoursite.com/2015/08/01/hello-world/"/>
    <id>http://yoursite.com/2015/08/01/hello-world/</id>
    <published>2015-08-01T14:14:05.000Z</published>
    <updated>2015-08-06T14:25:35.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to Black Sheep’s blog.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to Black Sheep’s blog.</p>
]]>
    </summary>
    
      <category term="BlackSheep" scheme="http://yoursite.com/categories/BlackSheep/"/>
    
  </entry>
  
</feed>